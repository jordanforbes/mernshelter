{"version":3,"sources":["components/Display.jsx","components/PetForm.jsx","components/EditPet.jsx","components/ShowPet.jsx","App.js","serviceWorker.js","index.js"],"names":["Display","props","useState","pets","setPets","useEffect","axios","get","then","res","console","log","data","sort","a","b","type","catch","err","class","map","pet","i","name","className","to","_id","PetForm","setName","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errors","setErrors","points","setPoints","onSubmit","e","preventDefault","shelterPet","post","navigate","onChange","target","value","properties","message","onClick","EditPet","put","ShowPet","delete","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a1944a3b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"@reach/router\";\r\nimport moment from \"moment\";\r\n\r\nconst Display =props=>{\r\n    const [all, setAll] = useState([]);\r\n    const [pets, setPets] = useState([]);\r\n\r\n    const fetchPets =()=>{\r\n        axios\r\n            .get(\"http://localhost:8000/api/petshelter\")\r\n            .then(res => {\r\n                console.log(res);\r\n                // setAll(res.data);\r\n                // setPets(res.data.filter(a => new Date(a.start)))\r\n                res.data.sort((a, b) => (a.type > b.type ? 1: -1));\r\n                // list.sort((a, b) => (a.color > b.color ? 1 : -1));\r\n                setPets(res.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPets()\r\n    }, []);\r\n\r\n\r\n    return (\r\n        \r\n      <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {pets.map((pet, i) => (\r\n            <tr>\r\n              <td>{pet.name}</td>\r\n              <td>{pet.type}</td>\r\n              <td>\r\n                <Link\r\n                  className=\"btn btn-outline-primary\"\r\n                  to={`/edit/${pet._id}`}\r\n                >\r\n                  Edit\r\n                </Link>\r\n                <Link \r\n                    className=\"btn btn-outline-success ml-2\"\r\n                    to={`/show/${pet._id}`}\r\n                >\r\n                    Details\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n}\r\n\r\nexport default Display;","import React, { useState } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nconst PetForm = props => {\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"none\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n    const [points, setPoints] = useState(0);\r\n\r\n    \r\n\r\n    const CreatePet =e=> {\r\n        e.preventDefault();\r\n        const shelterPet = {name, type, description, skill1, skill2, skill3, points};\r\n        axios.post(\"http://localhost:8000/api/petshelter\", shelterPet)\r\n            .then(res => {\r\n                console.log(res)\r\n                res.data.errors ? setErrors(res.data.errors) : navigate(\"/\");\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={CreatePet}>\r\n          <div className=\"col-sm-6\">\r\n            <div className=\"form-group\">\r\n              <label>Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n              {errors.name ? (\r\n                <p className=\"text-danger\">{errors.name.properties.message}</p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Type</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(e) => setType(e.target.value)}\r\n              />\r\n              {errors.type ? (\r\n                <p className=\"text-danger\">{errors.type.properties.message}</p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Description</label>\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              />\r\n              {errors.description ? (\r\n                <p className=\"text-danger\">\r\n                  {errors.description.properties.message}\r\n                </p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-sm-6\">\r\n            Skills (optional)\r\n            <div className=\"form-group\">\r\n              <label>Skill 1</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(e) => setSkill1(e.target.value)}\r\n              />\r\n              {errors.skill1 ? (\r\n                <p className=\"text-danger\">\r\n                  {errors.skill1.properties.message}\r\n                </p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Skill 2</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(e) => setSkill2(e.target.value)}\r\n              />\r\n              {errors.skill2 ? (\r\n                <p className=\"text-danger\">\r\n                  {errors.skill2.properties.message}\r\n                </p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Skill 3</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(e) => setSkill3(e.target.value)}\r\n              />\r\n              {errors.skill3 ? (\r\n                <p className=\"text-danger\">\r\n                  {errors.skill3.properties.message}\r\n                </p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          <input onClick={()=> setPoints(0)} type=\"submit\" value=\"Add Pet to Shelter\" className=\"btn btn-success\"/>\r\n        </form>\r\n      </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default PetForm","import React, { useState, useEffect } from \"react\";\r\nimport { navigate } from \"@reach/router\";\r\nimport axios from \"axios\";\r\n\r\nconst EditPet = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [skill1, setSkill1] = useState(\"\");\r\n  const [skill2, setSkill2] = useState(\"\");\r\n  const [skill3, setSkill3] = useState(\"\");\r\n  const [points, setPoints] = useState(0);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect( ()=> {\r\n      console.log(props._id);\r\n      axios.get(`http://localhost:8000/api/petshelter/${props._id}`)\r\n        .then(res => {\r\n            setName(res.data.name)\r\n            setType(res.data.type);\r\n            setDescription(res.data.description);\r\n            setSkill1(res.data.skill1);\r\n            setSkill2(res.data.skill2);\r\n            setSkill3(res.data.skill3);\r\n\r\n        }).catch(errors => console.log(errors));\r\n  }, [props._id])\r\n\r\n\r\n  const UpdatePet = (e) => {\r\n    e.preventDefault();\r\n    const shelterPet = { name, type, description, skill1, skill2, skill3, points };\r\n    axios\r\n      .put(`http://localhost:8000/api/petshelter/${props._id}`, shelterPet)\r\n      .then((res) => {\r\n        console.log(res);\r\n        res.data.errors ? setErrors(res.data.errors) : navigate(\"/\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={UpdatePet}>\r\n        <div className=\"col-sm-6\">\r\n          <div className=\"form-group\">\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              value={name}\r\n            />\r\n            {errors.name ? (\r\n              <p className=\"text-danger\">{errors.name.properties.message}</p>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Type</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(e) => setType(e.target.value)}\r\n              value={type}\r\n            />\r\n            {errors.type ? (\r\n              <p className=\"text-danger\">{errors.type.properties.message}</p>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description</label>\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              value={description}\r\n            />\r\n            {errors.description ? (\r\n              <p className=\"text-danger\">\r\n                {errors.description.properties.message}\r\n              </p>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-sm-6\">\r\n          Skills (optional)\r\n          <div className=\"form-group\">\r\n            <label>Skill 1</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(e) => setSkill1(e.target.value)}\r\n              value={skill1}\r\n            />\r\n            {errors.skill1 ? (\r\n              <p className=\"text-danger\">{errors.skill1.properties.message}</p>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Skill 2</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(e) => setSkill2(e.target.value)}\r\n              value={skill2}\r\n            />\r\n            {errors.skill2 ? (\r\n              <p className=\"text-danger\">{errors.skill2.properties.message}</p>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Skill 3</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(e) => setSkill3(e.target.value)}\r\n              value={skill3}\r\n            />\r\n            {errors.skill3 ? (\r\n              <p className=\"text-danger\">{errors.skill3.properties.message}</p>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Pet Info\"\r\n          className=\"btn btn-primary\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPet;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { navigate } from \"@reach/router\";\r\nimport axios from \"axios\";\r\n\r\nconst ShowPet =props=>{\r\n  const [name, setName] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [skill1, setSkill1] = useState(\"\");\r\n  const [skill2, setSkill2] = useState(\"\");\r\n  const [skill3, setSkill3] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    console.log(props._id);\r\n    axios\r\n      .get(`http://localhost:8000/api/petshelter/${props._id}`)\r\n      .then((res) => {\r\n        setName(res.data.name);\r\n        setType(res.data.type);\r\n        setDescription(res.data.description);\r\n        setSkill1(res.data.skill1);\r\n        setSkill2(res.data.skill2);\r\n        setSkill3(res.data.skill3);\r\n        console.log(res.data)\r\n      })\r\n      .catch((errors) => console.log(errors));\r\n  }, [props._id]);\r\n\r\n    const remove = (_id) => {\r\n    console.log(_id);\r\n    axios\r\n        .delete(`http://localhost:8000/api/petshelter/${_id}`)\r\n        .then((res) => {\r\n            navigate(\"/\")\r\n        })\r\n        .catch((err) => console.log(err));\r\n    };\r\n\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h3>Details about {name}</h3>\r\n        </div>\r\n        <div className=\"row\">\r\n          <p>\r\n            <strong>Type:</strong> {type}\r\n          </p>\r\n        </div>\r\n        <div className=\"row\">\r\n          <p>\r\n            <strong>Description:</strong> {description}\r\n          </p>\r\n        </div>\r\n        <div className=\"row\">\r\n          <strong>Skills:</strong>\r\n        </div>\r\n        <div className=\"row\">{skill1}</div>\r\n        <div className=\"row\">{skill2}</div>\r\n        <div className=\"row\">{skill3}</div>\r\n        <div className=\"row\">\r\n          <button onClick={() => remove(props._id)} className=\"mt-2 btn btn-danger\">\r\n            Adopt {name}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ShowPet","import React from 'react';\nimport './App.css';\nimport Display from './components/Display';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link, Router } from '@reach/router';\nimport PetForm from './components/PetForm';\nimport EditPet from './components/EditPet';\nimport ShowPet from './components/ShowPet';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>Pets at the shelter</h1>\n      <h4>These pets are looking for a good home</h4>\n      <Link className=\"btn btn-outline-primary\" to=\"/\">Pets at the shelter</Link>\n      <Link className=\"float-right\" to=\"/new\">+ Add a pet to the shelter</Link>\n\n      <Router className=\"my-5\">\n        <Display path=\"/\" />\n        <PetForm path=\"/new\" />\n        <EditPet path=\"/edit/:_id\" />\n        <ShowPet path=\"/show/:_id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}